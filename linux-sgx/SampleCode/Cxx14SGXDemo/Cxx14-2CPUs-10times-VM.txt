init enclave 37237270
hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

ecall enclave 11175300
destroy enclave 1671810
Info: Cxx14DemoEnclave successfully returned.

 Performance counter stats for './app':

             26.21 msec task-clock                       #    0.975 CPUs utilized             
                 2      context-switches                 #   76.293 /sec                      
                 0      cpu-migrations                   #    0.000 /sec                      
               597      page-faults                      #   22.774 K/sec                     
   <not supported>      cycles                                                                
   <not supported>      instructions                                                          
   <not supported>      branches                                                              
   <not supported>      branch-misses                                                         

       0.026899628 seconds time elapsed

       0.006907000 seconds user
       0.019737000 seconds sys


init enclave 37625470
hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

ecall enclave 11278500
destroy enclave 2042580
Info: Cxx14DemoEnclave successfully returned.

 Performance counter stats for './app':

             26.42 msec task-clock                       #    0.969 CPUs utilized             
                 2      context-switches                 #   75.688 /sec                      
                 0      cpu-migrations                   #    0.000 /sec                      
               597      page-faults                      #   22.593 K/sec                     
   <not supported>      cycles                                                                
   <not supported>      instructions                                                          
   <not supported>      branches                                                              
   <not supported>      branch-misses                                                         

       0.027281951 seconds time elapsed

       0.007959000 seconds user
       0.018898000 seconds sys


init enclave 37690398
hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

ecall enclave 11413466
destroy enclave 1992096
Info: Cxx14DemoEnclave successfully returned.

 Performance counter stats for './app':

             26.52 msec task-clock                       #    0.969 CPUs utilized             
                 2      context-switches                 #   75.415 /sec                      
                 0      cpu-migrations                   #    0.000 /sec                      
               597      page-faults                      #   22.511 K/sec                     
   <not supported>      cycles                                                                
   <not supported>      instructions                                                          
   <not supported>      branches                                                              
   <not supported>      branch-misses                                                         

       0.027365169 seconds time elapsed

       0.007992000 seconds user
       0.018989000 seconds sys


init enclave 37556740
hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

ecall enclave 11219700
destroy enclave 1688466
Info: Cxx14DemoEnclave successfully returned.

 Performance counter stats for './app':

             26.39 msec task-clock                       #    0.977 CPUs utilized             
                 2      context-switches                 #   75.774 /sec                      
                 0      cpu-migrations                   #    0.000 /sec                      
               598      page-faults                      #   22.656 K/sec                     
   <not supported>      cycles                                                                
   <not supported>      instructions                                                          
   <not supported>      branches                                                              
   <not supported>      branch-misses                                                         

       0.027023962 seconds time elapsed

       0.008937000 seconds user
       0.017892000 seconds sys


init enclave 37778732
hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

ecall enclave 11224990
destroy enclave 1982542
Info: Cxx14DemoEnclave successfully returned.

 Performance counter stats for './app':

             26.44 msec task-clock                       #    0.969 CPUs utilized             
                 2      context-switches                 #   75.633 /sec                      
                 0      cpu-migrations                   #    0.000 /sec                      
               595      page-faults                      #   22.501 K/sec                     
   <not supported>      cycles                                                                
   <not supported>      instructions                                                          
   <not supported>      branches                                                              
   <not supported>      branch-misses                                                         

       0.027276231 seconds time elapsed

       0.008970000 seconds user
       0.017941000 seconds sys


init enclave 37879456
hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

ecall enclave 11335956
destroy enclave 2423866
Info: Cxx14DemoEnclave successfully returned.

 Performance counter stats for './app':

             26.58 msec task-clock                       #    0.966 CPUs utilized             
                 2      context-switches                 #   75.244 /sec                      
                 0      cpu-migrations                   #    0.000 /sec                      
               597      page-faults                      #   22.460 K/sec                     
   <not supported>      cycles                                                                
   <not supported>      instructions                                                          
   <not supported>      branches                                                              
   <not supported>      branch-misses                                                         

       0.027525131 seconds time elapsed

       0.007011000 seconds user
       0.020018000 seconds sys


init enclave 37936942
hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

ecall enclave 11302626
destroy enclave 2438152
Info: Cxx14DemoEnclave successfully returned.

 Performance counter stats for './app':

             26.59 msec task-clock                       #    0.966 CPUs utilized             
                 2      context-switches                 #   75.211 /sec                      
                 0      cpu-migrations                   #    0.000 /sec                      
               596      page-faults                      #   22.413 K/sec                     
   <not supported>      cycles                                                                
   <not supported>      instructions                                                          
   <not supported>      branches                                                              
   <not supported>      branch-misses                                                         

       0.027523555 seconds time elapsed

       0.009010000 seconds user
       0.018006000 seconds sys


init enclave 37924074
hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

ecall enclave 11180998
destroy enclave 2045426
Info: Cxx14DemoEnclave successfully returned.

 Performance counter stats for './app':

             26.57 msec task-clock                       #    0.969 CPUs utilized             
                 2      context-switches                 #   75.262 /sec                      
                 0      cpu-migrations                   #    0.000 /sec                      
               598      page-faults                      #   22.503 K/sec                     
   <not supported>      cycles                                                                
   <not supported>      instructions                                                          
   <not supported>      branches                                                              
   <not supported>      branch-misses                                                         

       0.027410874 seconds time elapsed

       0.008998000 seconds user
       0.018004000 seconds sys


init enclave 37925166
hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

ecall enclave 11315348
destroy enclave 1664436
Info: Cxx14DemoEnclave successfully returned.

 Performance counter stats for './app':

             26.58 msec task-clock                       #    0.976 CPUs utilized             
                 2      context-switches                 #   75.238 /sec                      
                 0      cpu-migrations                   #    0.000 /sec                      
               598      page-faults                      #   22.496 K/sec                     
   <not supported>      cycles                                                                
   <not supported>      instructions                                                          
   <not supported>      branches                                                              
   <not supported>      branch-misses                                                         

       0.027240294 seconds time elapsed

       0.006960000 seconds user
       0.020001000 seconds sys


init enclave 37714110
hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

hello world
99, 1.000000, foo
make_unique<Vec>():      {0, 0}
make_unique<Vec>(1, 2): {1, 2}
make_unique<Vec[]>(5):   
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
     {0, 0}
The sequence of size 4: 9 2 5 1 
The sequence of size 20: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
The sequence of size 10: 0 1 2 3 4 5 6 7 8 9 
The sequence of size 3: 0 1 2 
(1, 2, 3, 4)
Forward search: found the target in vector v!
Backward search: found the target in vector v!
1  2  3  4  
A is final: False
B is final: True
veq1 and veq2 is equal: True
first pair of different values: (2, 3)
v_permu1 and v_permu2 is_permutation: False
R{3} R{1} R{4} R{1} R{5} : 1, 0
The fibonacci number at index 10: 89
pi as a const char: pi
circular area (integer): 300
circular area (floating point): 314.159265
The hex represented by '0b10100101' is: 0xa5
digit separator for integer: 1000000
digit separator for floating: 0.001015
digit separator for binary literal: 0x4c6
lambda_sum for (10, 10): 20
lambda_sum for (10, 10.0): 20.000000
result from lambda capture: 10
2 is an even number: true
result from constexpr while_loop(10): 10
before modification: a: 3, b1: 3, b2: 3
after modification: a: 4, b1: 3, b2: 4
read in     [String with spaces, and embedded "quotes" too]
stored as   ["String with spaces, and embedded \"quotes\" too"]
written out [String with spaces, and embedded "quotes" too]

read in     [String with spaces, and embedded $quotes$ too]
stored as   [$String with spaces, and embedded %$quotes%$ too$]
written out [String with spaces, and embedded $quotes$ too]

ecall enclave 11213126
destroy enclave 1729230
Info: Cxx14DemoEnclave successfully returned.

 Performance counter stats for './app':

             26.47 msec task-clock                       #    0.980 CPUs utilized             
                 2      context-switches                 #   75.565 /sec                      
                 0      cpu-migrations                   #    0.000 /sec                      
               598      page-faults                      #   22.594 K/sec                     
   <not supported>      cycles                                                                
   <not supported>      instructions                                                          
   <not supported>      branches                                                              
   <not supported>      branch-misses                                                         

       0.027014744 seconds time elapsed

       0.006932000 seconds user
       0.019808000 seconds sys


